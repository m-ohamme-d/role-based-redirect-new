
export const generateEnhancedPDFContent = (data: any, teamData: any[], departmentProjects: any[]) => {
  return `
=== ${data.reportType} ===
Generated: ${new Date().toLocaleString()}
Period: ${data.dateRange}
Department: ${data.department}
Team Lead: ${data.teamLead}

=== EXECUTIVE SUMMARY ===
Total Team Members: ${teamData.length}
Average Performance: ${(teamData.reduce((sum, member) => sum + member.performance, 0) / teamData.length).toFixed(1)}%
Total Hours Worked: ${teamData.reduce((sum, member) => sum + member.hoursWorked, 0)}
Total Tasks Completed: ${teamData.reduce((sum, member) => sum + member.tasksCompleted, 0)}
Average Client Satisfaction: ${(teamData.reduce((sum, member) => sum + member.clientSatisfaction, 0) / teamData.length).toFixed(1)}/5

=== TEAM PERFORMANCE DETAILS ===
${teamData.map(member => `
Employee: ${member.name}
Position: ${member.position}
Email: ${member.email}
Performance Rating: ${member.performance}%
Tasks Completed: ${member.tasksCompleted}
Hours Worked: ${member.hoursWorked}
Client Satisfaction: ${member.clientSatisfaction}/5
Productivity: ${member.productivity}%
Collaboration: ${member.collaboration}%
Timeliness: ${member.timeliness}%
Salary: ${member.salary}
Bonus: ${member.bonus}
Training Hours: ${member.trainingHours}
Certifications: ${member.certifications.join(', ')}
Work Type: ${member.workType}
Location: ${member.location}
Projects: ${member.projects.join(', ')}
Skills: ${member.skills.join(', ')}
Join Date: ${member.joinDate}
Last Review: ${member.lastReview}
`).join('\n')}

=== PROJECT STATUS REPORT ===
${departmentProjects.map(project => `
Project: ${project.name}
Client: ${project.clientName} (${project.clientIndustry})
Status: ${project.status}
Progress: ${project.progress}%
Budget: ${project.budget}
Actual Cost: ${project.actualCost}
Priority: ${project.priority}
Risk Level: ${project.riskLevel}
Start Date: ${project.startDate}
Expected Completion: ${project.expectedCompletion}
Team Members: ${project.teamMembers.join(', ')}
Technologies: ${project.technologies.join(', ')}
Hours Spent: ${project.hoursSpent}
Milestones: ${project.completedMilestones}/${project.milestones}
Client Satisfaction: ${project.clientSatisfaction}/5
Project Manager: ${project.projectManager}
`).join('\n')}

=== FINANCIAL SUMMARY ===
Total Project Budgets: $${departmentProjects.reduce((sum, project) => sum + parseInt(project.budget.replace(/[$,]/g, '')), 0).toLocaleString()}
Total Actual Costs: $${departmentProjects.reduce((sum, project) => sum + parseInt(project.actualCost.replace(/[$,]/g, '')), 0).toLocaleString()}
Total Team Salaries: $${teamData.reduce((sum, member) => sum + parseInt(member.salary.replace(/[$,]/g, '')), 0).toLocaleString()}
Total Bonuses: $${teamData.reduce((sum, member) => sum + parseInt(member.bonus.replace(/[$,]/g, '')), 0).toLocaleString()}

=== TRAINING & DEVELOPMENT ===
Total Training Hours: ${teamData.reduce((sum, member) => sum + member.trainingHours, 0)}
Total Certifications: ${teamData.reduce((sum, member) => sum + member.certifications.length, 0)}

=== ACCESS LOG ===
Report Generated By: ${data.generatedBy}
Access Level: Team Lead - ${data.department} Department Only
Timestamp: ${new Date().toISOString()}
`;
};

export const generateEnhancedCSVContent = (data: any, teamData: any[], departmentProjects: any[]) => {
  const teamCSV = `
Employee Name,Position,Email,Performance %,Tasks Completed,Hours Worked,Client Satisfaction,Productivity %,Collaboration %,Timeliness %,Salary,Bonus,Training Hours,Certifications,Work Type,Location,Join Date,Last Review
${teamData.map(member => 
  `"${member.name}","${member.position}","${member.email}",${member.performance},${member.tasksCompleted},${member.hoursWorked},${member.clientSatisfaction},${member.productivity},${member.collaboration},${member.timeliness},"${member.salary}","${member.bonus}",${member.trainingHours},"${member.certifications.join('; ')}","${member.workType}","${member.location}","${member.joinDate}","${member.lastReview}"`
).join('\n')}

PROJECT DATA:
Project Name,Client,Industry,Status,Progress %,Budget,Actual Cost,Priority,Risk Level,Start Date,Expected Completion,Team Size,Technologies,Hours Spent,Milestones,Client Satisfaction,Project Manager
${departmentProjects.map(project => 
  `"${project.name}","${project.clientName}","${project.clientIndustry}","${project.status}",${project.progress},"${project.budget}","${project.actualCost}","${project.priority}","${project.riskLevel}","${project.startDate}","${project.expectedCompletion}",${project.teamMembers.length},"${project.technologies.join('; ')}",${project.hoursSpent},"${project.completedMilestones}/${project.milestones}",${project.clientSatisfaction},"${project.projectManager}"`
).join('\n')}
`;
  return teamCSV;
};
